#! /usr/bin/env bash
rund="$(realpath $(dirname $0))/run"
mkdir -p "$rund"
. ~/.sh/logging.sh "$rund"

socket=$rund/$$.socket
touch "$rund/$$.tmp"
trap "rm $socket; rm '$rund/$$.tmp'" EXIT

function storeMap {
    lines=$(wc -l <$path)
    scale=$(echo "s = $(($height * 4)) / $lines; if (s > 1) s = 1; s" | bc -l)
    code-minimap --padding $width -V $scale -H 0.3 $path > "$rund/$$.tmp"
}

function init {
    width=$1
    height=$2
}

function setPath {
    path=$1
    storeMap
}

function range {
    rangf=$1
    rangt=$2
}

function cursor { 
    cursor=$1
}

function preview {
    if [[ -z $height ]]; then
        echo "Loading preview..."
        return
    fi
    rang='NR>=int(((f-1)/4)*s)+1 && NR<=int(((t-1)/4)*s)+1 { printf "\033[48;5;235m" }'
    curs='NR==int(((c-1)/4)*s)+1 { printf "\033[38;5;215m\033[48;5;237m" }'
    prin='1 { printf $0 "\033[0m\n" }'
    vs="-v s=$scale -v f=${rangf:-1} -v t=${rangt:-1} -v c=${cursor:-1}"
    tput clear
    cat "$rund/$$.tmp" | cut -c 1-$width | awk $vs "$rang $curs $prin"
}

function mainLoop {
    echo "$socket"
    while read cmd args; do
        case $cmd in
            "init") init $args ;;
            "setPath") setPath $args ;;
            "range") range $args ;;
            "cursor") cursor $args ;;
            "preview") preview ;;
            *) echo OpOpenServer does not recognize command $cmd ;;
        esac
    done
}

nc -Ul $socket | mainLoop
