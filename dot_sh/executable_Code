#! /usr/bin/env bash

rund=$(realpath $(dirname $0))/run
mkdir -p "$rund"
. ~/.sh/logging.sh "$rund"

if ! tmux has-session 2>/dev/null; then
    tmux -2 new "$0 $*"
    exit
fi

if [[ $1 != ":here:" ]]; then
    tmux -2 new-window "$0 ':here:' '$$' $*"
    tmux wait "$$"
    exit
else
    shift
    tmuxSignalToWakeUp=$1
    shift
fi

cd $1
sess=$2

mkfifo "$rund/$$.fifo"

side=20
bot=7

tmux -2 split-window -hdP -l $((2 * $side)) -F "#{pane_index} #{pane_pid} #{pane_height}" "~/.sh/ExplorerServer" >"$rund/$$.fifo" &
read explorerPaneId explorerServerPid h <"$rund/$$.fifo"
explorerServerSocket="$rund/$explorerServerPid.socket"
explorerWidth=$side
explorerHeight=$(($h - $bot - 2))
while ! [[ -e "$explorerServerSocket" ]]; do sleep 0.1s; done

tmux -2 split-window -dI -t $explorerPaneId -l $bot < <(cat <(tail -n 1 $sess | xargs printf "\033[48;5;237m%-41.41s\033[0m\n") <(tac $sess | head -n $bot | sed '1d' | cut -c 1-41))

tmux -2 split-window -hdPb -t $explorerPaneId -l $side -F "#{pane_pid} #{pane_width} #{pane_height}" "~/.sh/MinimapServer" >"$rund/$$.fifo" &
read minimapServerPid minimapWidth minimapHeight <"$rund/$$.fifo"
minimapServerSocket="$rund/$minimapServerPid.socket"
while ! [[ -e "$minimapServerSocket" ]]; do sleep 0.1s; done 

function cleanup {
    rm "$rund/$$.fifo"
    tmux kill-window
}
trap cleanup EXIT

sessionVim="$(dirname $sess)/vim-sessions/$(pwd | sed 's#/#ESCAPED_SLASH#g').vim"
[[ -e $sessionVim ]] && sessionOption="-S $sessionVim"
vim $sessionOption \
    --cmd "let g:codeSessionsFile=\"$sess\""\
    --cmd "let g:codeExplorerWidth=\"$explorerWidth\""\
    --cmd "let g:codeExplorerHeight=\"$explorerHeight\""\
    --cmd "let g:codeExplorerServerSocket=\"$explorerServerSocket\""\
    --cmd "let g:codeMinimapWidth=\"$minimapWidth\""\
    --cmd "let g:codeMinimapHeight=\"$minimapHeight\""\
    --cmd "let g:codeMinimapServerSocket=\"$minimapServerSocket\""

tmux wait -S $tmuxSignalToWakeUp
