#! /usr/bin/env bash

rund=$(dirname $0)/run
mkdir -p "$rund"
. ~/.sh/logging.sh "$rund"

if ! tmux has-session 2>/dev/null; then
    tmux -2 new "$0 $*"
    exit
fi

if [[ $1 != ":here:" ]]; then
    tmux -2 new-window "$0 ':here:' $*"
    exit
else
    shift
fi

cd $1
sess=$2

mkfifo "$rund/$$.fifo"

exec {opFileServerfd}< <(~/.sh/OpFileServer)
opFileServerPid=$!
read opFileServerFifo <&$opFileServerfd
tmux split-window -hdIP -l 20 -F "#{pane_index} #{pane_width} #{pane_height}" <&$opFileServerfd >"$rund/$$.fifo" &
read opFileServerPaneId w h <"$rund/$$.fifo"

echo "$rund/$$.fifo" "init" "." "$w" "$h" > $opFileServerFifo
read < "$rund/$$.fifo"
echo "$rund/$$.fifo" "previewToStdout" > $opFileServerFifo
read < "$rund/$$.fifo"

exec {minimapServerfd}< <(~/.sh/MinimapServer)
minimapServerPid=$!
read minimapServerFifo <&$minimapServerfd
tmux split-window -hdIP -l 20 -F "#{pane_index} #{pane_width} #{pane_height}" <&$minimapServerfd >"$rund/$$.fifo" &
read minimapServerPaneId w h <"$rund/$$.fifo"

echo "$rund/$$.fifo" "init" "$w" "$h" > $minimapServerFifo
read < "$rund/$$.fifo"

function cleanup {
    kill $opFileServerPid
    kill $minimapServerPid
    rm "$rund/$$.fifo"
    tmux kill-window
}
trap cleanup EXIT

sessionVim="$(dirname $sess)/vim-sessions/$(pwd | sed 's#/#ESCAPED_SLASH#g').vim"
[[ -e $sessionVim ]] && sessionOption="-S $sessionVim"
vim $sessionOption --cmd "let g:codeSessionsFile=\"$sess\"" --cmd "let g:codeFileServerFifo=\"$opFileServerFifo\"" --cmd "let g:codeMinimapServerFifo=\"$minimapServerFifo\""
