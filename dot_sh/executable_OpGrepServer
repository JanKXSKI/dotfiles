#! /usr/bin/env bash
rund=$(dirname $0)/run
mkdir -p $rund
. ~/.sh/logging.sh "$rund"

socket="${1:-$rund/$$.socket}"
fifo="$rund/$$.fifo"
mkfifo "$fifo"
trap "rm $fifo; rm $socket" EXIT

function reinit {
    file=$1
    cont=$(($2-2))
    agas="${@:3}"
    maxi=$(ag "$agas" $file | wc -l)
    curi=0
}

function next {
    curi=$(($curi % $maxi + 1))
    rang="rmin = \$1 - $cont/2; rmax = \$1 + $cont/2; if (rmin < 1) { rmax -= (rmin - 1); rmin = 1; }  printf \"-r %d:%d -H %d\", rmin, rmax, \$1"
    bata=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { $rang }")
    echo "$bata"
}

function preview {
    [[ $file != $1 ]] && reinit "$@"
    next
}

function get {
    line=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { print \$1 }")
    echo $line
}

function mainLoop {
    exec {ofd}>"$fifo"
    while true; do
        read cmd args
        case $cmd in
            "preview") preview $args >&$ofd ;;
            "get") get >&$ofd ;;
            "shutdown") break ;;
            *) echo OpGrepServer does not recognize command $cmd >&$ofd ;;
        esac
    done
    exec {ofd}>&-
}

nc -kUl $socket <"$fifo" | mainLoop
