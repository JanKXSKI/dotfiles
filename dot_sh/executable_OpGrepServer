#! /usr/bin/env bash
rund=$(dirname $0)/run
mkdir -p $rund
. ~/.sh/logging.sh "$rund"

socket="${1:-$rund/$$.socket}"
infifo="$rund/$$.in.fifo"
outfifo="$rund/$$.out.fifo"
trap "rm $socket; rm $infifo; rm $outfifo" EXIT

function init {
    file=$1
    cont=$(($2-2))
    agas="${@:3}"
    maxi=$(ag "$agas" $file | wc -l)
    curi=0
    next
}

function next {
    curi=$(($curi % $maxi + 1))
    rang="rmin = \$1 - $cont/2; rmax = \$1 + $cont/2; if (rmin < 1) { rmax -= (rmin - 1); rmin = 1; }  printf \"-r %d:%d -H %d\", rmin, rmax, \$1"
    bata=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { $rang }")
    output
}

function output {
    bat -n --color=always $bata $file
}

function update {
    tput cup 0 0
    output | sed "s#\$#$(tput el)#"
    tput ed
}

function get {
    line=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { print \$1 }")
    echo $line
}

function mainLoop {
    exec {ctrlOutFd}>$outfifo
    while read cmd args; do
        case $cmd in
            "init") init $args ;;
            "next") next ;;
            "preview") output >&$ctrlOutFd; break ;;
            "get") get >&$ctrlOutFd; break ;;
            *) echo OpGrepServer does not recognize command $cmd ;;
        esac
    done
    exec {ctrlOutFd}>&-
}

mkfifo $infifo
mkfifo $outfifo
nc -kUl $socket >$infifo <$outfifo &
ncPid=$!

mainLoop <$infifo

kill $ncPid
