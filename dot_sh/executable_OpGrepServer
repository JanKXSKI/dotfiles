#! /usr/bin/env bash
rund=$(dirname $0)/run
mkdir -p $rund
. ~/.sh/logging.sh "$rund"

socket="${1:-$rund/$$.socket}"
infifo="$rund/$$.in.fifo"
outfifo="$rund/$$.out.fifo"
trap "rm $infifo; rm $outfifo" EXIT

function reinit {
    file=$1
    cont=$(($2-2))
    agas="${@:3}"
    maxi=$(ag "$agas" $file | wc -l)
    curi=0
}

function next {
    curi=$(($curi % $maxi + 1))
    rang="rmin = \$1 - $cont/2; rmax = \$1 + $cont/2; if (rmin < 1) { rmax -= (rmin - 1); rmin = 1; }  printf \"-r %d:%d -H %d\", rmin, rmax, \$1"
    bata=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { $rang }")
    bat -n --color=always $bata $file
}

function preview {
    [[ $file != $1 ]] && reinit "$@"
    next
}

function get {
    line=$(ag --numbers "$agas" $file | awk -F: "FNR == $curi { print \$1 }")
    echo $line
}

mkfifo $infifo
mkfifo $outfifo

while [[ -z $handledGet ]]; do
    nc -Ul $socket >$infifo <$outfifo &
    exec {ifd}<$infifo
    exec {ofd}>$outfifo
    read -u $ifd cmd args
    case $cmd in
        "preview") preview $args >&$ofd ;;
        "get") get >&$ofd; handledGet="sure did" ;;
        *) echo OpGrepServer does not recognize command $cmd >&$ofd ;;
    esac
    exec {ifd}<&-
    exec {ofd}>&-
    rm $socket
done
