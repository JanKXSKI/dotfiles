#! /usr/bin/env bash

rund=$(dirname $0)/run
mkdir -p "$rund"
. ~/.sh/logging.sh "$rund"

path=$1
height=$2

function filteredLs {
    ls -pA1 $1 | grep -v -e ".swp$" -e "^Session.vim$"
}

function toNeedle {
    sed\
        -e "\\:^$1$: { s:.*:$2 $3 $4 &:; q; }"\
        -e "s:.*:$2 $3 1 &:"
}

function afterNeedle {
    sed -e "1,\\:^$1$: d" -e "s:.*:$2 $3 0 &:"
}

function irRec {
    local dir=$1
    local levr="${2:-0}"
    local foll=$(($levr/5))
    local levl=$(($levr%5))
    local next;
    local selt;
    if read next; then
        [[ $next == */ ]] && selt=2 || selt=3
        filteredLs $dir | toNeedle $next $foll $levl $selt
        if [[ $selt == 2 ]]; then
            irRec "$dir/${next%/}" $(($levr + 1))
        fi
        filteredLs $dir | afterNeedle $next $foll $levl
    fi
}

function ir {
    echo $path | sed 's#/#/\n#g' | irRec '.'
}

function sedAddIcons {
    i='\\:^[0-9] [0-9] [01] " $1 "\$:'
    a='\\:^[0-9] [0-9] [23] " $1 "\$:'
    si='s:.*:" $2 " &:'
    sa='s:.*:" $3 " &:'
    cat $(dirname $0)/ExplorerIcons.txt |\
        awk "{ printf \"$i $si\\n$a $sa\\n\" }"
}

function addIcons {
    sed -f <(sedAddIcons)
}

ir | addIcons
exit

echo '{ print "\033[48;5;237m" $0 "\033[0m" }'

function getIconSedProgram {
    iconIndex=$(($1 + 1))
    beforeChar="$2"
    pattern='/^"$1"\$/'
    program="{ print \"$pattern { s#.*#$beforeChar\"\$$iconIndex\"$(tput sgr0) &#; p; d; }\" }"
    cat $(dirname $0)/ExplorerIcons.txt | awk "$program" | tee DEBUG$1.txt
}

function highlightLastLine {
    sed -e '$!{p;d;}' -f <(getIconSedProgram 2 "$1")
}

function printToNeedle {
    need=$1
    levl=$2
    toNeedle='$0==n { found=1 } 1 { print $0; if (found) exit }'
    if [[ $levl -eq 0 ]]; then
        nop=" "
        nep=" "
    else
        nop="│"
        nep="╰"
    fi
    awk -v n="$need" "$toNeedle" | sed -e '${p;d;}' -f <(getIconSedProgram 1 "$nop") | highlightLastLine "$nep"
}

function printToEnd {
    need=$1
    levl=$2
    prin='BEGIN { i=sprintf("%*s", l+2, "") } 1 { if (p) print i $0 } $0==n { p=1 }'
    awk -v n=$need -v l="$levl" "$prin"
}

context=$(($height / 2))
before=$(wc -l < $out1)
after=$(wc -l < $out2)
if [[ $context -lt $after ]]; then
    after=$context
fi
if [[ $context -gt $before ]]; then
    after=$(($after + ($context - $before)))
else
    before=$(($context + $height % 2))
fi
[[ $before -gt 0 ]] && tail -n $before $out1
[[ $after -gt 0 ]] && head -n $after $out2
